/*************** Colors ***************/

.dark-theme {
    --color-A: #a0800c;
    --alt-color-A: #af8f1b;

    --color-B: #06b0a2;
    --alt-color-B: #1bd4c5;

    --color-C: #3a7f02;
    --alt-color-C: #4a7d21;

    --color-D: #582b90;
    --color-E: #bb3a12;
    --color-F: #555555;

    --inactive-color: #555555;
    --input-hover-background: #000000;

    --input-background: #111111;
    --input-background-red:   17;   // #11 is equal to 17
    --input-background-green: 17;
    --input-background-blue:  17;

    --center-backdrop: #2f2f2f;

    --site-background: #202020;
    --game-border-color: var(--site-background);

    --text-color: #e0e0e0;
}

.light-theme {

    --color-A: #c34904; // Reddish orange
    --alt-color-A: #aa4005;

    --color-B: #001c7d; // Navy blue
    --alt-color-B: #001768;

    --color-C: #105903; // Dark green
    --alt-color-C: #146b04;

    --color-D: #770092; // Purple
    // --lightColorD: #66007d;

    --color-E: #83680a; // Yellow-gold
    // --lightColorE: #a3810c;

    --color-F: #444444; // Gray

    --inactive-color: #555555;

    --input-background: #bbbbbb;
    --input-background-red:   187;   // #bb is equal to 187
    --input-background-green: 187;
    --input-background-blue:  187;

    --input-hover-background: #aaaaaa;

    --center-backdrop: #999999;

    --site-background: #cccccc;
    --game-border-color: var(--site-background);

    --text-color: #000000;
}

.solid-A {
    background-color: var(--color-A);
}
.solid-B {
    background-color: var(--color-B);
}
.solid-C {
    background-color: var(--color-C);
}
.solid-D {
    background-color: var(--color-D);
}
.solid-E {
    background-color: var(--color-E);
}
.solid-F {
    background-color: var(--color-F);
}

.content-A {
    color: var(--color-A);
    border-color: var(--color-A);
    &.hoverable {
        &:hover {
            color: var(--alt-color-A);
            border-color: var(--alt-color-A);
        }
    }
}
.content-B {
    color: var(--color-B);
    border-color: var(--color-B);
    &.hoverable {
        &:hover {
            color: var(--alt-color-B);
            border-color: var(--alt-color-B);
        }
    }
}
.content-C {
    color: var(--color-C);
    border-color: var(--color-C);
    &.hoverable {
        &:hover {
            color: var(--alt-color-C);
            border-color: var(--alt-color-C);
        }
    }
}
.content-D {
    color: var(--color-D);
    border-color: var(--color-D);
    &.hoverable {
        &:hover {
            color: var(--alt-color-D);
            border-color: var(--alt-color-D);
        }
    }
}
.content-E {
    color: var(--color-E);
    border-color: var(--color-E);
    &.hoverable {
        &:hover {
            color: var(--alt-color-E);
            border-color: var(--alt-color-E);
        }
    }
}
.content-F {
    color: var(--color-F);
    border-color: var(--color-F);
    &.hoverable {
        &:hover {
            color: var(--alt-color-F);
            border-color: var(--alt-color-F);
        }
    }
}

/*************** Full-page Styling  ***************/

html, body {
    height: 100%; // These are needed to enable the full-page div's use of 'min-height: 100%;'
}

body {
    font-family: Helvetica;
    font-size:   18px;
}

.full-page {
    min-height: 100%;

    background-color: var(--site-background);

    color: var(--text-color);

    // Since .main and .side-menu are inline-block, this centers them when .main
    //  drops below .side-menu
    text-align: center;

    --side-menu-width: 160px;  // This number is also hard-coded into play/play.component.ts
    // The smallest a typical phone screen gets -- also hard-coded into play/play.component.ts
    --main-min-width:  360px;
}

/*************** Inputs  ***************/

.interface {

    max-width: 100%;
    word-wrap: break-word;

    background-color: var(--input-background);

    &.hoverable {
        &:hover {
            cursor: pointer;
            background-color: var(--input-hover-background);
        }
    }

    &:disabled, &.disabled {
        color: var(--inactive-color);
        border-color: var(--inactive-color);

        &.hoverable {
            &:hover {
                cursor: default;
                background-color: var(--input-background);
                color: var(--inactive-color);
                border-color: var(--inactive-color);
            }
        }
    }

    &.huge {
        --font-size: 36px;  // A locally scoped variable useful for sub-classes
        --border-width: 5px;
        font-size: var(--font-size);
        padding: 18px;
        border-width: var(--border-width);
        border-style: solid;

        &.rounded {
            border-radius: 9px;
        }
    }

    &.large {
        --font-size: 24px;  // A locally scoped variable useful for sub-classes
        --border-width: 4px;
        font-size: var(--font-size);
        padding: 12px;
        border-width: var(--border-width);
        border-style: solid;

        &.rounded {
            border-radius: 6px;
        }
    }

    &.medium {
        --font-size: 18px;  // A locally scoped variable useful for sub-classes
        --border-width: 3px;
        font-size: var(--font-size);
        padding: 9px;
        border-width: var(--border-width);
        border-style: solid;

        &.rounded {
            border-radius: 4.5px;
        }
        
    }

    &.small {
        --font-size: 14px;  // A locally scoped variable useful for sub-classes
        --border-width: 2.5px;
        font-size: var(--font-size);
        padding: 7px;
        border-width: var(--border-width);
        border-style: solid;

        &.rounded {
            border-radius: 3.5px;
        }
        
    }
}

/*************** Page Layout -- Placing Chunks  ***************/

.side-menu {
    display: inline-block;  // Sits to the left of .main
    vertical-align: top;
    text-align: center;

    --side-menu-padding: 8px;
    padding: var(--side-menu-padding);
    width: calc(var(--side-menu-width) - 2 * var(--side-menu-padding));
}

// The central content-holder
//
// This is guaranteed to be at least --main-min-width wide.
.main {
    display: inline-block;

    // Either this sits to the right of .side-menu, or if the total available
    //  width is less than --side-menu-width + --main-menu-width, then this
    //  drops below the 'side' menu. If it drops below the 'side' menu, then it
    //  has a width of --main-min-width.
    --actual-main-width: max(calc(100vw - var(--side-menu-width)), var(--main-min-width));
    width: var(--actual-main-width);
}

// If you want the content inside main to be in the center of the page rather
//  than in the center of the space between the side menu and the right edge
//
// This is guaranteed to be at least --main-min-width wide.
.horizontally-centered-main {
    // There are three cases:
    //
    //  (1) .main sits to the right of .side-menu and has a width greater than:
    //          (--side-menu-width + --main-min-width)
    //  (2) .main sits to the right of .side-menu and has a width less than:
    //          (--side-menu-width + --main-min-width)
    //  (3) .main sits below .side-menu, is centered, and has a width of:
    //          --main-min-width
    //
    // In case (1), we want no left margin and the margin on the right to be
    //      --side-menu-width for balance.
    // In case (2), we want no left margin and the margin on the right to be
    //      (100% - --main-mid-width).
    // In case (3), we want no margin.
    //
    // Fortunately, all three cases can be expressed as
    //      min(--side-menu-width, --actual-main-width - --main-min-width).

    --right-margin: min(var(--side-menu-width), calc(var(--actual-main-width) - var(--main-min-width)));
    width: calc(100% - var(--right-margin));
    margin-right: var(--right-margin);

    text-align: center;
    font-size: 18px;
}

.main-vertical-color-strip {
    min-height: 100vh;
    --mvcs-three-fourths-width: calc((100% + var(--main-min-width)) / 2);
    min-width: var(--mvcs-three-fourths-width);

    display: inline-flex;
    justify-content: center;
    align-items: center;
    background-color: var(--center-backdrop);
}

.vertically-centered-main {
    --vcm-padding: 30px;
    width: calc(100% - 2 * var(--vcm-padding));
    padding: var(--vcm-padding);
}

/*************** Page Layout -- Small Pieces  ***************/

.spacer {
    &.huge {
        height: 48px;
    }
    &.large {
        height: 36px;
    }
    &.medium {
        height: 24px;
    }
    &.small {
        height: 12px;
    }
    &.tiny {
        height: 6px;
    }
}

.input-group {
    display: grid;
    grid-template-columns: repeat(auto-fit, 250px);
    column-gap: 20px;
    row-gap: 10px;
    justify-content: center;
}

.input {
    display: inline-flex;
    align-items: center;
    justify-content: end;
}

.label {
    display: inline-block;
    margin-right: 10px;
    overflow-wrap: break-word;
    max-width: 100px;
    margin-top: 5px;
    margin-bottom: 5px;
}

.labeled {
    margin-left: 10px;
}

.aligned {
    display: inline-flex;
    align-items: center;
    justify-content: end;
    margin-top: 5px;
    margin-bottom: 5px;
}

h2 {
    font-size: 24px;
}
